@page "/data/{region}"
@using F3Wasm.Components
@using F3Wasm.Models
@using F3Wasm.Data
@using F3Core
@using System.Globalization
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>F3 @Region.ToUpper() Data</PageTitle>

<style>
    /* Show the search text box (because of below) */
    .form-control:first-of-type {
        display: block;
        margin: 12px 0px 12px 0px;
        width: 50%;
    }

    /* Hide the date picker box in the modal */
    .form-control {
        display: none;
    }

    /* Disabled Dates should have a different style */
    .flatpickr-day.flatpickr-disabled {
        background: #28a745;
        color: #fff;
    }

    /* Center the date picker */
    .flatpickr-calendar {
        margin: auto;
    }

    .dot {
        height: 8px;
        width: 8px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        margin-right: 8px;
    }

    .link {
        color: #007bff;
        text-decoration: none;
        background-color: transparent;
        cursor: pointer;
    }

    #privacy-note {
        margin-top: 12px;
        font-size: 10px;
        text-align: center;
    }

    #historical-note {
        margin-top: 12px;
        font-style: italic;
    }

    #loader {
        display: flex;
        justify-content: center;
    }

    .center-content {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .aoChallengeButton {
        height: 75px;
    }

    .aoChallengeContainer {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 10px;
    }

    .hyperlink {
        color: #4A90E2;
    }
</style>

@if (allData == null)
{
    <p>Loading...</p>
}
else
{
    <Row>
    <Column>
        <Button Color="currentView == OverallView.AllTime ? Color.Primary : Color.Light" Clicked="ShowAllTime">All Time</Button>
        <Dropdown @ref="yearDropdown" Display="Display.InlineBlock">
            <DropdownToggle Color="currentView == OverallView.Year || currentView == OverallView.Month ? Color.Primary : Color.Light">Year @if (currentView == OverallView.Year || currentView == OverallView.Month) @currentYear</DropdownToggle>
            <DropdownMenu MaxMenuHeight="120px">
                @foreach (var year in validYears)
                {
                    <DropdownItem Clicked="@(() => ShowYear(year))">@year</DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>

        <Dropdown @ref="monthDropdown" Display="Display.InlineBlock">
            <DropdownToggle Color="currentView == OverallView.Month ? Color.Primary : Color.Light">Month @if (currentView == OverallView.Month) @currentMonth</DropdownToggle>
            <DropdownMenu MaxMenuHeight="240px">
                @foreach (var month in validMonths)
                {
                    <DropdownItem Clicked="@(() => ShowMonth(month))">@month</DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>
    </Column>
    </Row>

    <Row Class="mt-1">
        <Column>
            @if (RegionInfo.HasQSourcePosts)
            {
                <Button Color="currentView == OverallView.QSource ? Color.Primary : Color.Light" Clicked="ShowQSource" style="margin-right:4px;">Q Source</Button>
            }

            <Button Color="currentView == OverallView.Kotter ? Color.Primary : Color.Light" Clicked="ShowKotter">Kotter</Button>
            <Button Color="currentView == OverallView.QKotter ? Color.Primary : Color.Light" Clicked="ShowQKotter">Q Kotter</Button>

            @if (RegionInfo.DisplayName != "Gold Rush")
            {
                <Button Color="currentView == OverallView.AoList ? Color.Primary : Color.Light" Clicked="ShowAoList">@DateTime.Now.ToString("MMM", CultureInfo.InvariantCulture) AOs</Button>
            } 
        </Column>
    </Row>    

    <Row Class="mt-1">
        <Column>
            @if (RegionInfo.DisplayName == "Gold Rush")
            {
                <Button Outline="currentView != OverallView.GoldStandard" Color="Color.Warning" Clicked="@(() => currentView = OverallView.GoldStandard)">Gold Standard</Button>
            }

            @* TerracottaChallenge *@
            @if (RegionInfo.DisplayName == "Terracotta")
            {
                <Button Outline="currentView != OverallView.TerracottaChallenge" Color="Color.Warning" Clicked="@(() => currentView = OverallView.TerracottaChallenge)">PAX on FIRE 2025</Button>
            }
        </Column>
    </Row>

    <Row>
        <Column>
            @if (currentView == OverallView.QSource)
            {
                <Button>*Since @allData.QSourcePosts.Min(x => x.Date).ToShortDateString()</Button>
            }
            else if (lastUpdatedDate != DateTime.MinValue)
            {
                <Button>Last Updated: @lastUpdatedDate.ToShortDateString()</Button>
            }
        </Column>
    </Row>

    @if (loading)
    {
        <div id="loader">
            <SpinKit Type="SpinKitType.Bounce" />
        </div>
    }
    else
    {
        <TextEdit Placeholder="Search PAX..." Text="@customFilterValue" TextChanged="@OnCustomFilterValueChanged"></TextEdit>

        @if (currentView == OverallView.Kotter || currentView == OverallView.QKotter)
        {
            <Button Color="Color.Secondary" Clicked="@ExportToCsv">Export to CSV</Button>
        }

        @if (currentView == OverallView.GoldStandard)
        {
            <GoldStandard AllData="allData" FilterValue="@customFilterValue"></GoldStandard>
        }
        else if (currentView == OverallView.TerracottaChallenge)
        {
            <PaxOnFire AllData="allData" FilterValue="@customFilterValue"></PaxOnFire>
        }
        else
        {
            <DataGrid @ref="dataGrid" 
            TItem="DisplayRow" 
            Data="@currentRows" 
            ShowPager 
            CustomFilter="@OnCustomFilter"
            SortMode="DataGridSortMode.Single" 
            PageSize="50" 
            Narrow 
            ShowPageSizes
            PagerOptions="new(){ ButtonRowPosition=PagerElementPosition.Start }" 
            SelectedRowChanged="SelectedRowChanged"
            Responsive
        >
         <DataGridColumns>
                <DataGridColumn Field="@nameof(DisplayRow.PaxName)" Caption="Name" SortField="@nameof(DisplayRow.PaxName)">
                     <DisplayTemplate > 
                        @{
                            var hyperlink = ">";
                        }
                        <span class="hyperlink">@context.PaxName</span>
                    </DisplayTemplate> 
                </DataGridColumn>

                @if (currentView != OverallView.AoChallenge && currentView != OverallView.AoList)
                {
                    <DataGridColumn Field="@nameof(DisplayRow.PostCount)" Caption="Posts" Filterable="false" />
                    <DataGridColumn Field="@nameof(DisplayRow.QCount)" Caption="Q" Filterable="false" />
                }

                @if (currentView == OverallView.Kotter)
                {
                    <DataGridColumn Field="@nameof(DisplayRow.LastPost)" Caption="Last Post" Filterable="false" DisplayFormat="{0:M/d/yy}" />
                    <DataGridColumn Field="@nameof(DisplayRow.KotterDays)" Caption="Days Since" Filterable="false" />
                }
                else @if (currentView == OverallView.QKotter)
                {
                    <DataGridColumn Field="@nameof(DisplayRow.LastQ)" Caption="Last Q" Filterable="false" DisplayFormat="{0:M/d/yy}" />
                    <DataGridColumn Field="@nameof(DisplayRow.LastPost)" Caption="Last Post" Filterable="false" DisplayFormat="{0:M/d/yy}" />
                    <DataGridColumn Field="@nameof(DisplayRow.KotterDays)" Caption="Days Since" Filterable="false" />
                }
                else if (currentView == OverallView.AoChallenge || currentView == OverallView.AoList)
                {
                    <DataGridColumn Field="@nameof(DisplayRow.PostCount)" Caption="Posts" Filterable="false" />
                    <DataGridColumn Field="@nameof(DisplayRow.AoPosts)" Caption="AOs Posted" Filterable="false" />
                    <DataGridColumn Field="@nameof(DisplayRow.AoPercent)" Caption="AO Percent" Filterable="false" DisplayFormat="{0:0}%" />
                }
                else if (currentView == OverallView.QSource)
                {
                    @* Empty except posts/Q above *@
                }
                else
                {
                    @if (RegionInfo.DisplayName != "Cap Valley Ipssa")
                    {
                        <DataGridColumn Field="@nameof(DisplayRow.FirstPost)" Caption="1st Post" Filterable="false" DisplayFormat="{0:M/d/yy}" />
                        <DataGridColumn Field="@nameof(DisplayRow.PostPercent)" Caption="@(RegionInfo.HasHistoricalData && currentView == OverallView.AllTime ? "Post % *" : "Post %")" Filterable="false" DisplayFormat="{0:0}%" />
                        <DataGridColumn Field="@nameof(DisplayRow.Streak)" Caption="@(RegionInfo.HasHistoricalData && currentView == OverallView.AllTime ? "Daily Streak *" : "Daily Streak")" Filterable="false" />
                        <DataGridColumn Field="@nameof(DisplayRow.QRatio)" Caption="Q Ratio" Filterable="true" DisplayFormat="{0:0}%" />
                    }
                    else
                    {
                        @* Just Post Percent for IPSSA *@
                        <DataGridColumn Field="@nameof(DisplayRow.PostPercent)" Caption="Post %" Filterable="false" DisplayFormat="{0:0}%" />
                    }
                }
            </DataGridColumns>

        </DataGrid>
        }   
        @if (RegionInfo.HasHistoricalData && firstNonHistoricalDate.HasValue)
        {
            <p>* Since @firstNonHistoricalDate.Value.ToString("M/d/yy")</p>
        }
    }
    <Modal @bind-Visible="@showPaxModal" id="SelectedPaxModal" Closing="@OnModalClosing">
        @if (selectedPax != null)
        {
            <ModalContent Centered Size="ModalSize.Fullscreen">
                 <ModalHeader>
                     <ModalTitle>@selectedPax.Name</ModalTitle>
                     <CloseButton />
                 </ModalHeader>
                 <ModalBody>
                     @if (currentView == OverallView.AoChallenge || currentView == OverallView.AoList)
                    {
                        <Column>
                            <h4>AOs Posted This Month</h4>
                            <div class="aoChallengeContainer">
                                @foreach (var location in allData.Aos.OrderBy(x => x.DayOfWeek).ToList())
                                {
                                    <Button class="aoChallengeButton"
                                        style="@GetAoChallengeButtonColor(location)">@location.Name</Button>
                                }
                                @if (RegionInfo.DisplayName == "South Fork")
                                {
                                    <Button class="aoChallengeButton"
                                        style="@GetAoChallengeButtonColor(FullMoonRuckAo)">Full Moon Ruck</Button>
                                }
                            </div>
                        </Column>
                    }
                    else
                    {
                        <Row VerticalGutter="16">
                            <Column>
                                <PaxSummaryTable 
                                    RegionInfo="@RegionInfo"
                                    SelectedPaxPosts="@selectedPaxPosts"
                                    AllPosts="@allData.Posts"
                                    AllPossibleWorkoutDays="@allPossibleWorkoutDays"
                                    SelectedPaxHistoricalData="@selectedPaxHistoricalData"
                                >
                                </PaxSummaryTable>

                                <PaxCalendar SelectedPaxPosts="@selectedPaxPosts" SelectedPaxQSourcePosts="@selectedPaxQSourcePosts" HasQSource="RegionInfo.HasQSourcePosts" ></PaxCalendar>
           
                                @* <PaxKeyDates SelectedPaxPosts="@selectedPaxPosts"></PaxKeyDates> *@
                             </Column>

                             <Column>
                                 <PaxLocations 
                                     RegionInfo="@RegionInfo" 
                                     SelectedPaxPosts="@selectedPaxPosts"
                                     AoList="@allData.Aos"
                                     HasHistoricalData="selectedPaxHistoricalData != null"
                                 >
                                 </PaxLocations>
                            </Column>
                        </Row>

                        <PaxPostedWith 
                            AllPosts="@allData.Posts" 
                            RegionInfo="@RegionInfo" 
                            SelectedPaxPosts="@selectedPaxPosts"
                            SelectedPaxHistoricalData="@selectedPaxHistoricalData"
                        >
                        </PaxPostedWith>

                        @if (selectedPaxHistoricalData != null)
                        {
                            <Row>
                                <Column id="historical-note">
                                    * Since @firstNonHistoricalDate.Value.ToString("M/d/yy")
                                </Column>
                            </Row>
                        }

                        <Row>
                            <Column id="privacy-note">
                                If you see any errors, or would like to hide your data, contact Peacock or a Band admin.
                            </Column>
                        </Row>
                    }
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary" Clicked="@HideModal">Close</Button>
                </ModalFooter>
            </ModalContent>
        }
        </Modal>
}