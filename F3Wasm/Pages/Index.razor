@page "/upload/{region}"
@using F3Wasm.Models
@using F3Wasm.Data
@using F3Core.Regions
@inject HttpClient Http

<PageTitle>F3 @Region.ToUpper() Importer</PageTitle>

<style>
    .custom-link {
        cursor: pointer;
    }

    .one-row {
        display: flex;
        flex-direction: row;
    }

    .radio-group-item {
        margin-bottom: -8px;
        display: inline-grid;
        width: 100%;
    }
</style>

<div class="one-row" style="padding-bottom:12px">
    <Button Color="Color.Primary" Clicked="OnMissingAoButtonClicked">Check for Missing Data</Button>
    <Button Color="Color.Primary" Clicked="ClearCache" style="margin-left:12px;">Clear Cache</Button>
    @if (isMissingDataLoading)
    {
        <SpinKit Type="SpinKitType.Bounce" />
    }
</div>

@if (missingAos.Count > 0)
{
    <ListGroup style="padding-bottom:12px">
        @foreach (var missing in missingAos)
        {
            <ListGroupItem class="custom-link" Clicked="@(x => OnMissingAoSelected(missing))">@missing.Name -
                @missing.DayOfWeek.ToString() @missing.Date.ToShortDateString()</ListGroupItem>
        }
    </ListGroup>
}


@if (showNoMissingAoMessage)
{
    <Alert Color="Color.Success" ShowIcon Visible>
    All up to date!
    <CloseButton />
</Alert>
}

<DatePicker TValue="DateTime?" Placeholder="Q Date" Date="@qDate" DateChanged="@OnDateChanged" DisplayFormat="M/d/yyy" />
<RadioGroup TValue="string" Name="ao" CheckedValue="@ao" CheckedValueChanged="@OnAoChanged" Buttons Orientation="Orientation.Vertical" style="margin-top:12px;">
    @foreach (var ao in aoList)
    {
        <div style="@ShowOrHideAo(ao)" class="radio-group-item">
            <Radio Value="@(ao.Name)" style="appearance:none">@ao.Name (@ao.City)</Radio>
        </div>
    }
    <div style="margin-bottom:6px;" class="radio-group-item">
        <Radio Value="@AoOtherValue" style="appearance:none">Other</Radio>
    </div>
</RadioGroup>

@if (ao == AoOtherValue)
{
    <TextEdit @bind-Text="@otherAoName" style="margin-bottom:12px" Placeholder="Other Location Name (Feb Moon Ruck, etc.)"></TextEdit>
}

<MemoEdit Rows="5" Placeholder="Paste the Pax Comment from Band" @bind-Text="@comment" style="margin-bottom:12px">
</MemoEdit>
<Button Color="Color.Primary" Clicked="@OnCommentButtonClicked">Submit</Button>

@if (pax.Count > 0)
{
    <Table Narrow>
    <TableHeader>
        <TableRow>
            <TableHeaderCell>Name</TableHeaderCell>
            <TableHeaderCell>Q?</TableHeaderCell>
            <TableHeaderCell>FNG</TableHeaderCell>
            <TableHeaderCell></TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (var p in pax.Where(x => x.IsOfficial).ToList())
            {
                <TableRow Color="@(p.IsQ ? Color.Primary : Color.Default)">
                    <TableRowCell>
                        @p.Name
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Checked="@p.IsQ" CheckedChanged="@(isChecked => OnQSelected(p, (bool)isChecked))">
                        </Check>
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Disabled></Check>
                    </TableRowCell>
                    <TableRowCell>
                        <Icon Name="IconName.Times" Clicked="@(e => OnRemovePax(p))" class="custom-link" />
                    </TableRowCell>
                </TableRow>
            }

            @foreach (var p in pax.Where(x => !x.IsOfficial).ToList())
            {
                <TableRow Color="@(string.IsNullOrEmpty(p.Name) ? Color.Danger : p.IsFng ? Color.Success : Color.Default)">
                    <TableRowCell>
                        @p.Name

                        @if (p.IsFng)
                        {
                            <TextEdit @bind-Text="@p.Name"></TextEdit>
                            <Check TValue="bool" @bind-Checked="@p.IsDr" style="margin-top:8px">Downrange?</Check>
                            @if (p.IsDr)
                            {
                                <div style="font-size:10px; margin: 4px;color: #4b4646">Marking Downrange adds the PAX to the roster with the selected naming region, but doesn't mark as FNG</div>
                                <Select TValue="int" @bind-SelectedValue="@p.NamingRegionIndex">
                                    <SelectItem Value="0">Select a Naming Region</SelectItem>
                                    @foreach (var region in RegionList.AllRegionValues)
                                    {
                                        <SelectItem Value="@region.Key">@region.Value</SelectItem>
                                    }
                                </Select>
                            }
                        }
                        else
                        {
                            <Autocomplete TItem="String" TValue="string" Data="@allNames" TextField="@(( item ) => item)"
                    ValueField="@(( item ) => item)" @bind-SelectedValue="@p.Name" @bind-SelectedText="@p.UnknownName" 
                    Placeholder="Search..." Filter="AutocompleteFilter.StartsWith" FreeTyping
                    CustomFilter="@(( item, searchValue ) => item.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
                            <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
                            </Autocomplete>
                        }
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Checked="@p.IsQ" CheckedChanged="@(isChecked => OnQSelected(p, (bool)isChecked))">
                        </Check>
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Checked="@p.IsFng" CheckedChanged="@(isChecked => OnFngSelected(p, (bool)isChecked))"></Check>
                    </TableRowCell>
                    <TableRowCell Clicked="@(e => OnRemovePax(p))" >
                        <Icon Name="IconName.Times" class="custom-link" />
                    </TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>

    <div class="one-row" style="padding-bottom:12px">
        <Button Color="Color.Secondary" Clicked="@OnAddRowClicked" @bind-Disabled="@isLoading">Add Row</Button>
    </div>

    <div class="one-row" style="padding-bottom:12px">
        <Button Color="Color.Primary" Clicked="@OnUploadButtonClicked" @bind-Disabled="@isLoading">Upload</Button>
        <span style="margin: auto 0px auto 12px;">@pax.Count PAX</span>
        @if (isLoading)
        {
            <SpinKit Type="SpinKitType.Bounce" />
        }
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <Alert Color="Color.Danger" Visible>
        <AlertDescription>@errorMessage</AlertDescription>
    </Alert>
    }
}

<Alert Color="Color.Success" @bind-Visible="@showCompleteAlert">
    <AlertMessage>
        Done!
    </AlertMessage>
    <AlertDescription>
        Data has been uploaded to Sheets
    </AlertDescription>
    <CloseButton />
</Alert>


