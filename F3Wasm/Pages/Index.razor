@page "/upload/{region}"
@using F3Wasm.Models
@using F3Wasm.Data
@using F3Core.Regions
@inject HttpClient Http

<PageTitle>F3 @Region.ToUpper() Importer</PageTitle>

<style>
    .custom-link {
        cursor: pointer;
    }

    .one-row {
        display: flex;
        flex-direction: row;
    }

    .radio-group-item {
        margin-bottom: -8px;
        display: inline-grid;
        width: 100%;
    }

    /* Card header styling (similar to bg-slate-900 and rounded-t-lg) */
    .card-header {
        background-color: #1e293b; /* slate-900 */
        color: #fff;
        padding: 1rem;
        border-top-left-radius: 0.375rem;
        border-top-right-radius: 0.375rem;
    }

        .card-header .card-title {
            margin: 0;
        }

    /* Location selection card styling */
    .location-card {
        cursor: pointer;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        transition: border-color 0.2s, background-color 0.2s;
    }

        .location-card:hover {
            border-color: #86b7fe;
        }

        .location-card.selected {
            border-color: #0d6efd;
            background-color: #e7f1ff;
        }

    .indicator {
        width: 1rem;
        height: 1rem;
        border: 2px solid #0d6efd;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .indicator .dot {
            width: 0.5rem;
            height: 0.5rem;
            background-color: #0d6efd;
            border-radius: 50%;
        }
</style>

<div class="mx-auto" Style="max-width: 600px;">
@if (aoList == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <!-- Top row: Check Missing Data and Clear Cache -->
        <div class="d-flex mb-3">
            <Button Color="Color.Primary" Clicked="OnMissingAoButtonClicked" Class="flex-fill me-2" Loading="isMissingDataLoading">
                Check for Missing Data
            </Button>
            <Button Color="Color.Primary" Clicked="ClearCache" Class="flex-fill">
                Clear Cache
            </Button>
        </div>

        <!-- Missing Data List -->
        @if (missingAos.Count > 0)
        {
            <div class="mb-3">
                <Alert Color="Color.Danger" class="d-flex align-items-center">
                    <Icon Name="IconName.ExclamationCircle" class="me-2" />
                    <span>Missing entries:</span>
                </Alert>
                <div class="d-grid gap-2">
                    @foreach (var missing in missingAos)
                    {
                        <Card onclick="@(() => OnMissingAoSelected(missing))">
                            <CardBody style="padding: 0.25em; margin:6px; font-weight:500" class="d-flex justify-content-between text-start">
                                <CardText>
                                    <span>@missing.Name - <span class="text-muted" style="font-weight:400">@missing.DayOfWeek @missing.Date.ToShortDateString()</span></span>
                                </CardText>
                                <Icon Name="IconName.ChevronRight" class="ms-auto" style="margin-top:3px;" />
                            </CardBody>
                        </Card>
                    }
                </div>
            </div>

            <hr />
        }

        @if (showNoMissingAoMessage)
        {
            <Alert Color="Color.Success" ShowIcon Visible>
                All up to date!
                <CloseButton />
            </Alert>
        }

        <Addons>
            <Addon AddonType="AddonType.Body">
                <DatePicker @ref="@datePicker" TValue="DateTime?" Placeholder="Q Date" Date="@qDate" DateChanged="@OnDateChanged" DisplayFormat="M/d/yyy" />
            </Addon>
            <Addon AddonType="AddonType.End">
                <Button Color="Color.Secondary" Clicked="@(()=>datePicker.ToggleAsync())">
                    <Icon Name="IconName.CalendarDay" />
                </Button>
            </Addon>
        </Addons>

        <!-- Locations Grid-->
        <div class="row g-3 mb-3 mt-1">
            @foreach (var item in aoList)
            {
                <div style="@ShowOrHideAo(item)" class="col-6  gx-0">
                    <div class="location-card @(ao == item.Name ? "selected" : "")" @onclick="@(() => OnAoChanged(item.Name))">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-0">@item.Name</h6>
                                <p class="mb-0 text-muted" style="font-size:14px;">@item.City</p>
                            </div>
                            <div class="indicator" style="margin-top:auto;margin-bottom:auto;">
                                @if (ao == item.Name)
                                {
                                    <div class="dot"></div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (ao == AoOtherValue)
        {
            <TextEdit @bind-Text="@otherAoName" style="margin-bottom:12px" Placeholder="Other Location Name (Full Moon Ruck, etc.)"></TextEdit>
        }

        <!-- Checkboxes Row (Site Closed and Q Source if applicable) -->
        <div class="d-flex align-items-center p-3 bg-light rounded mb-3">
            @if (RegionInfo.HasQSourcePosts)
            {
                <Check TValue="bool" @bind-Checked="@isQSource" class="me-3" />
                <span class="me-auto">Q Source</span>
            }
            <Check TValue="bool" @bind-Checked="@isSiteClosed" class="me-2" />
            <span class="me-auto">Site Closed</span>
        </div>

        <!-- PAX Comment Section -->
        <div class="mb-3">
            @if (!isSiteClosed)
            {
                <MemoEdit Rows="5" @bind-Text="@comment" Placeholder="Paste the PAX Comment here..." Style="min-height: 100px;" />
            }
            else
            {
                <div class="text-muted fst-italic mb-2" style="font-size:14px;">
                    This adds a new Site Closed row to the data sheet so the site no longer shows as "Missing Data"
                </div>
                <Button Color="Color.Primary" Clicked="OnSiteClosedClicked">Upload</Button>
            }
        </div>

        @if (!isSiteClosed)
        {
            <Button Color="Color.Primary" Clicked="OnCommentButtonClicked" class="w-100" Style="margin-bottom:24px;" Loading="commentIsLoading">
                Match PAX
            </Button>
        }
    </div>

}
@if (pax.Count > 0 && !isSiteClosed)
{
    <Table Narrow>
        <TableHeader>
            <TableRow>
                <TableHeaderCell>Name</TableHeaderCell>
                <TableHeaderCell>Q?</TableHeaderCell>
                <TableHeaderCell>FNG</TableHeaderCell>
                <TableHeaderCell></TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @foreach (var p in pax.Where(x => x.IsOfficial).ToList())
            {
                <TableRow Color="@(p.IsQ ? Color.Primary : Color.Default)">
                    <TableRowCell>
                        @p.Name
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Checked="@p.IsQ" CheckedChanged="@(isChecked => OnQSelected(p, (bool)isChecked))">
                        </Check>
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Disabled></Check>
                    </TableRowCell>
                    <TableRowCell>
                        <Icon Name="IconName.Times" Clicked="@(e => OnRemovePax(p))" class="custom-link" />
                    </TableRowCell>
                </TableRow>
            }

            @foreach (var p in pax.Where(x => !x.IsOfficial).ToList())
            {
                <TableRow Color="@(string.IsNullOrEmpty(p.Name) ? Color.Danger : p.IsFng ? Color.Success : Color.Default)">
                    <TableRowCell>
                        @p.Name

                        @if (p.IsFng)
                        {
                            <TextEdit @bind-Text="@p.Name"></TextEdit>
                            <Check TValue="bool" @bind-Checked="@p.IsDr" style="margin-top:8px">Downrange?</Check>
                            @if (p.IsDr)
                            {
                                <div style="font-size:10px; margin: 4px;color: #4b4646">Marking Downrange adds the PAX to the roster with the selected naming region, but doesn't mark as FNG</div>
                                <Select TValue="int" @bind-SelectedValue="@p.NamingRegionIndex">
                                    <SelectItem Value="0">Select a Naming Region</SelectItem>
                                    @foreach (var region in RegionList.AllRegionValues)
                                    {
                                        <SelectItem Value="@region.Key">@region.Value</SelectItem>
                                    }
                                </Select>
                            }
                        }
                        else
                        {
                            <Autocomplete TItem="String" TValue="string" Data="@allNames" TextField="@(( item ) => item)"
                                          ValueField="@(( item ) => item)" @bind-SelectedValue="@p.Name" @bind-SelectedText="@p.UnknownName"
                                          Placeholder="Search..." Filter="AutocompleteFilter.StartsWith" FreeTyping
                                          CustomFilter="@(( item, searchValue ) => item.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
                                <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
                            </Autocomplete>
                        }
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Checked="@p.IsQ" CheckedChanged="@(isChecked => OnQSelected(p, (bool)isChecked))">
                        </Check>
                    </TableRowCell>
                    <TableRowCell>
                        <Check TValue="bool" Checked="@p.IsFng" CheckedChanged="@(isChecked => OnFngSelected(p, (bool)isChecked))"></Check>
                    </TableRowCell>
                    <TableRowCell Clicked="@(e => OnRemovePax(p))">
                        <Icon Name="IconName.Times" class="custom-link" />
                    </TableRowCell>
                </TableRow>
            }

            <TableRow>
                <div class="one-row">
                    <Button Color="Color.Secondary" Clicked="@OnAddRowClicked" @bind-Disabled="@isLoading">Add Row</Button>
                </div>
            </TableRow>
        </TableBody>
    </Table>

    <div style="padding-bottom:12px;">
        <Button Color="Color.Primary" Clicked="@OnUploadButtonClicked" @bind-Disabled="@isLoading" Loading="isLoading">Upload</Button>
        <span style="margin: auto 0px auto 12px;">@pax.Count PAX for @ao</span>
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <Alert Color="Color.Danger" Visible>
            <AlertDescription>@errorMessage</AlertDescription>
        </Alert>
    }
}

<Alert Color="Color.Success" @bind-Visible="@showCompleteAlert">
    <AlertMessage>
        Done!
    </AlertMessage>
    <AlertDescription>
        Data has been uploaded to Sheets
    </AlertDescription>
    <CloseButton />
</Alert>

</div>

